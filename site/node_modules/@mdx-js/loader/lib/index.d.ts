/**
 * A Webpack (5+) loader for MDX.
 * See `webpack.cjs`, which wraps this, because Webpack loaders must currently
 * be CommonJS.
 *
 * @this {LoaderContext}
 *   Context.
 * @param {string} value
 *   Value.
 * @param {LoaderContext['callback']} callback
 *   Callback.
 * @returns {undefined}
 *   Nothing.
 */
export function loader(this: LoaderContext, value: string, callback: LoaderContext['callback']): undefined;
export type CompileOptions = import('@mdx-js/mdx').CompileOptions;
export type Compatible = import('vfile').Compatible;
export type VFile = import('vfile').VFile;
export type VFileMessage = import('vfile-message').VFileMessage;
export type WebpackCompiler = import('webpack').Compiler;
export type LoaderContext = import('webpack').LoaderContext<unknown>;
/**
 * Configuration (TypeScript type).
 *
 * Options are the same as `compile` from `@mdx-js/mdx` with the exception
 * that the `SourceMapGenerator` and `development` options are supported
 * based on how you configure webpack.
 * You cannot pass them manually.
 */
export type Options = Omit<CompileOptions, 'SourceMapGenerator' | 'development'>;
/**
 * Process.
 */
export type Process = (vfileCompatible: Compatible) => Promise<VFile>;
